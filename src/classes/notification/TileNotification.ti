class TileNotification extends Container mixin MActivatable {
    height = 3;
}

function TileNotification:__init__( ... )
    self:resolve( ... )
    self:super( ... )

    local notif = self.notification
    self.titleLabel = self:addNode( Label( notif.title ) ):set {
        colour = 1;
        Y = 1;
        X = 2;
    }

    if notif.body then
        self.bodyLabel = self:addNode( Label( notif.body ) ):set {
            Y = 2;
            colour = 8;
            X = 2;
        }
    end


    if notif.body or notif.options then
        self.dismissButton = self:addNode( Button "x" ):set {
            Y = 1;
            X = "$parent.width";
            width = 1;
            height = 3;
            verticalAlign = "centre";
            colour = colours.cyan;
            Z = 2;
        }

        self.dismissButton:on("trigger", function()
            client:removeNotification( notif )
        end)
    end

    self.backgroundColour = "$self.active and 256 or 128";
    self.consumeAll = false
end

function TileNotification:handle( eventObj )
    if not self.super:handle( eventObj ) then return end

    if eventObj.main == "MOUSE" and eventObj.button == 1 and ( eventObj.sub == "CLICK" or eventObj.sub == "UP" ) then
        if eventObj.handled or not eventObj:withinParent( self ) then
            self.active = false
        elseif eventObj.sub == "CLICK" then
            self.active, eventObj.handled = true, true
        elseif eventObj.sub == "UP" and self.active then
            eventObj.handled = true
            self.active = false

            client:expandNotification( self.notification )
        end
    end
end

configureConstructor( {
    orderedArguments = { "notification" }
}, true )
